(function() {
  var CliCommand, action, execute, getOptions, makeAction, util, _, _i, _len, _ref;

  _ = require('underscore');

  util = require('./util');

  CliCommand = require('./cli-command');

  execute = require('./runner').execute;

  getOptions = function(args, options, callback) {
    var _ref, _ref1, _ref2;
    if (_.isString(args)) {
      args = [args];
    }
    if (_.isArray(args)) {
      _ref = util.setOptions(options, callback), options = _ref[0], callback = _ref[1];
    } else {
      _ref1 = [util.setOptions(args, options), []], (_ref2 = _ref1[0], options = _ref2[0], callback = _ref2[1]), args = _ref1[1];
    }
    return [args, options, callback];
  };

  makeAction = function(action) {
    return function(args, options, callback) {
      var command, _ref;
      _ref = getOptions(args, options, callback), args = _ref[0], options = _ref[1], callback = _ref[2];
      command = new CliCommand(['git', action], args, options);
      return execute(command, this._getOptions(), callback);
    };
  };

  _ref = ['push', 'pull', 'fetch'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    action = _ref[_i];
    exports[action] = makeAction(action);
  }

}).call(this);
